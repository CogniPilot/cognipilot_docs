{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CogniPilot Developers Guide","text":""},{"location":"#releases","title":"Releases","text":"Name Release Date EOL Date Oct. 2023 Oct 2024 B (Mythical TBD) TBD TBD"},{"location":"#road-map","title":"Road Map","text":"<ul> <li>Github RoadMap</li> </ul> <p>CogniPilot Foundation</p>"},{"location":"#contributors","title":"Contributors","text":""},{"location":"#companies","title":"Companies","text":"<ul> <li>NXP</li> <li>Rudis Laboratories</li> </ul>"},{"location":"#universities","title":"Universities","text":"<ul> <li>Purdue</li> </ul>"},{"location":"releases/airy/","title":"About Airy Alicanto","text":"<p>An Alicanto is a bird from  Chilean mythology known to eat gold or silver and then glow. The bird is incapable of flight after overindulging on ore.</p> <p>Airy Alicanto represents the origin of CogniPilot's light weight, and minimalistic software stack following a correct by construction software paradigm.</p>"},{"location":"releases/airy/#correct-by-construction-design-drivers","title":"Correct by Construction Design Drivers","text":"<p>CogniPilot is not aiming to re-invent an opensource autopilot that can be a drop in replacement for use in Hobby drones, FPV Racing drones, or a wide variety of DIY autonomous vehicles, there are many great autopilots for that (ArduPilot, BetaFlight, PX4). CogniPilot instead focuses on state-of-the-art methologies for creating an autopilot with mathematically provable robustness properties. In order to achieve this level of reliability, accurate mathematical models of the vehicle and control software must be established that are beyond the expected domain of many hobbyists. However, for those willing to pursue the extra steps to create a mathematical model of their vehicle, templates are available to enable out of tree custom vehicles. CogniPilot is a new class of open source autopilot that can conduct safety critical missions such as transporting people, with a level of safety assurance not currently available in other open source autopilots.</p> <ul> <li> <p>Minimum Viable Code for the Mission: By minimizing the lines of source code and branching, CogniPilot ensures higher reliability, maintainability, and verifiability of the project. </p> </li> <li> <p>Minimize Branch Statements in Control and Estimation Code: CogniPilot generally classifies its code components into two areas. The first is low-level driver and application code. The second is guidance, control, and estimation code for the vehicle. Developers carefully consider the addition of each branch (if statement etc.) in the code for the estimator and controller, as developers are modelling the entire system mathematically. Each branch statement considerably complicates the verification task.</p> </li> <li> <p>Minimize Maintenance to Maintain Reliability: A goal of CogniPilot is to support a wide variety of vehicles (Planes, Copters, Boats, Rovers, Submersibles) and user applications while maintaining software integrity and reliaiblity. CogniPilot plans to limit official support for each release to a minimal amount of vehicles for each class, while providing out of tree support via templates.</p> </li> <li> <p>Deprecate if No-longer Maintained: On each release cycle, the CogniPilot technical steering committee (TSC) will make a decision on whether to maintain official support for each vehicle platform or whether to adopt a new platform. This is to combat the slow creep in lines of code due to vehicle specific edge cases. </p> </li> </ul>"},{"location":"releases/airy/#currently-supported-platforms","title":"Currently supported platforms:","text":""},{"location":"releases/airy/#rover","title":"Rover","text":"<ul> <li>MrBuggy3</li> <li>ELM4</li> </ul> <p>CogniPilot's upcoming release, to be named, but going by B-Mythical (a mythical creature with a name starting with B) will have planned additional support for:</p>"},{"location":"releases/airy/#mulirotor","title":"Mulirotor","text":"<ul> <li>NXP RDDrone</li> <li>TBD</li> </ul>"},{"location":"releases/airy/#submersible","title":"Submersible","text":"<ul> <li>TBD</li> </ul>"},{"location":"releases/airy/#plane","title":"Plane","text":"<ul> <li>TBD</li> </ul>"},{"location":"releases/airy/#software-stack","title":"Software Stack","text":"<ul> <li>Ubuntu 22.04</li> <li>Zephyr RTOS 3.5</li> <li>ROS Humble</li> <li>Gazebo Harmonic</li> </ul> <p>To get started see Install</p>"},{"location":"releases/airy/cerebri/","title":"About Cerebri","text":"<p>Cerebri is a correct by construction autopilot. This software paradigm simplifies the verifcation and validation task through consideration of ease of verification at the the time of writing.</p> <p>Github</p>"},{"location":"releases/airy/cerebri/boards/nxp_vmu_rt1170/","title":"NXP VMU RT1170 Overview","text":"<p>More documentation coming soon.</p> <p>Board schematics</p>"},{"location":"releases/airy/getting_started/install/","title":"Installation","text":""},{"location":"releases/airy/getting_started/install/#requirements","title":"Requirements","text":"<ul> <li>Ubuntu 22.04 host environment</li> </ul> <p>This may work on other environments but only Ubuntu 22.04 is officially supported.</p>"},{"location":"releases/airy/getting_started/install/#docker-option","title":"Docker Option","text":"<p>If you wish, there is a docker container that is a dev environment for CogniPilot with Nvidia GPU support. If you use this option, do not run the native_install script, as the packages are already installed.</p>"},{"location":"releases/airy/getting_started/install/#setup-ssh-keys-on-host-and-github","title":"Setup SSH keys on Host and GitHub","text":"<ul> <li>Ensure that you have setup ssh keys on your host computer and GitHub to be able to clone the CogniPilot repositories: Connecting to GitHub with SSH</li> </ul>"},{"location":"releases/airy/getting_started/install/#setup-gpg-keys-on-host-and-github-optional","title":"Setup GPG keys on Host and GitHub (Optional)","text":"<ul> <li>Ensure that you have setup gpg keys on your host computer and GitHub to sign your commits: Connecting to GitHub with SSH</li> </ul>"},{"location":"releases/airy/getting_started/install/#install-git","title":"Install Git","text":"<pre><code>sudo apt install git\n</code></pre>"},{"location":"releases/airy/getting_started/install/#clone-helmet","title":"Clone Helmet","text":"<pre><code>mkdir -p ~/cognipilot\ncd ~/cognipilot\ngit clone git@github.com:cognipilot/helmet\n</code></pre>"},{"location":"releases/airy/getting_started/install/#run-install-script-if-not-using-docker","title":"Run Install Script (If not using docker)","text":"<pre><code>~/cognipilot/helmet/install/native_install.sh\n. ~/.profile\n</code></pre>"},{"location":"releases/airy/getting_started/install/#sitl-convenience-script","title":"SITL Convenience Script","text":"<pre><code>build_mrbuggy3_sitl\n</code></pre> <p>This command is running the following script.</p> <p>This script does the following:</p> <ul> <li>Sets up the vcs workspaces based on yaml files provided in helmet.</li> <li>Builds the cranium ROS2 workspace</li> <li>Builds Cerebri native_posix software-in-the-loop simuliation</li> <li>Builds Cyecca (control/estimation software)</li> <li>Builds Electrode (ground station software)</li> </ul> <pre><code></code></pre>"},{"location":"releases/airy/getting_started/install/#start-jupyterlab-if-you-want","title":"Start JupyterLab (if you want)","text":"<pre><code>cyecca\n</code></pre>"},{"location":"releases/airy/getting_started/install/#run-mrbuggy3-sitl-in-jupyterlab-terminal-or-bash-directly","title":"Run MrBuggy3 SITL (in JupyterLab terminal or Bash directly)","text":"<pre><code>ros2 launch mrbuggy3_gz_bringup gz_nav2.launch.py\n</code></pre> <p>Attention</p> <p>If running on a machine with a limited graphics card use:</p> <pre><code>ros2 launch mrbuggy3_gz_bringup gz_nav2.launch.py world:=basic_map\n</code></pre>"},{"location":"releases/airy/getting_started/install/#simulation","title":"Simulation","text":"<p>Example of simulation running.</p> <p></p> <p>Attention</p> <p>Use a joystick controller (Logitech F310 suggested) to control vehicle modes.</p>"},{"location":"releases/airy/getting_started/install/#select-a-mode","title":"Select a Mode:","text":"<ul> <li>A: manual</li> <li>X: cmd_vel (nav2)</li> <li>B: auto (corti)</li> </ul>"},{"location":"releases/airy/getting_started/install/#manual-mode","title":"Manual Mode:","text":"<ul> <li>Left stick Up/Down: throttle</li> <li>Right stick Left/Right: steering</li> </ul>"},{"location":"releases/airy/getting_started/install/#nav2-cmd_vel-mode","title":"Nav2 (cmd_vel) Mode:","text":"<ul> <li>Click 2D Pose Goal and select desired location on RVIZ2 map.</li> </ul>"},{"location":"releases/airy/getting_started/install/#auto-mode","title":"Auto Mode","text":"<ul> <li>Click 2D Pose Goal and select desired location on RVIZ2 map.</li> </ul>"},{"location":"releases/airy/getting_started/install/#arming","title":"Arming","text":"<ul> <li>START: arm</li> <li>BACK: disarm</li> </ul>"},{"location":"releases/b-mythical/","title":"About B-mythical","text":"<p>Name to be determined.</p> <p>See our current progress on our Roadmap.</p>"},{"location":"releases/b-mythical/#software-stack","title":"Software Stack","text":"<ul> <li>Ubuntu 24.04</li> <li>Zephyr RTOS 3.6+</li> <li>ROS 2 Jazzy</li> <li>Gazebo Ionic</li> </ul>"},{"location":"resources/contact/","title":"Contact","text":""},{"location":"resources/contribute/","title":"Contribute","text":""}]}