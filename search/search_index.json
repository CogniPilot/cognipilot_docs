{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CogniPilot Developers Guide","text":"<p>Selection a Release:</p> Name Release Date EOL Date Oct. 2023 Oct 2024 B (Mythical TBD) TBD TBD"},{"location":"#road-map","title":"Road Map","text":"<ul> <li>Github RoadMap</li> </ul> <p>CogniPilot Foundation</p>"},{"location":"#contributors","title":"Contributors","text":""},{"location":"#companies","title":"Companies","text":"<ul> <li>NXP</li> <li>Rudis Laboratories</li> </ul>"},{"location":"#universities","title":"Universities","text":"<ul> <li>Purdue</li> </ul>"},{"location":"releases/airy/","title":"About Airy Alicanto","text":"<p>An Alicanto is a bird from  Chilean mythology known to eat gold or silver and then glow. The bird is often considered to incapable of flight after overindulging on ore.</p> <p>Airy represents the light weight, and minimalistic software stack that follow a correct by construction software paradigm. By minimizing the lines of source code and branching, we ensure higher reliability, maintainability, and verifiability of the project.</p> <p>Our goal is for CogniPilot to support a wide variety of vehicles (Planes, Copters, Boats, Rovers, Submersibles) and user applications while maintaining software integrity and reliaiblity. We plan to limit official support for each release to a minimal amount of vehicles for each class, while providing out of tree support via templates.</p> <p>Currently supported platforms: * Rover     * MrBuggy3     * ELM4</p> <p>In our upcoming release, to be named, but going by B-Mythical (a mythical creature with a name starting with B), we plan to additionally support: * Mulirotor     * NXP RDDrone     * TBD * Submersible     * TBD * Plane     * TBD</p> <p>that are officially maintained. We intend to enable straight forward customization of official platforms to meet use needs, while ensuring maintainability, but not over-extending vehicle support. However, our initial support on Airy is focused on the MrBuggy3 rover as a prototype vehicle.</p> <p>To get started see Docker Simulation Tutorial</p>"},{"location":"releases/airy/cerebri/","title":"About Cerebri","text":"<p>Cerebri is a correct by construction autopilot. This software paradigm simplifies the verifcation and validation task through consideration of ease of verification at the the time of writing.</p> <p>Github</p>"},{"location":"releases/airy/cerebri/boards/nxp_vmu_rt1170/","title":"NXP VMU RT1170 Overview","text":"<p>More documentation coming soon.</p> <p>Board schematics</p>"},{"location":"releases/airy/getting_started/install/","title":"Installation","text":""},{"location":"releases/airy/getting_started/install/#requirements","title":"Requirements","text":"<ul> <li>Ubuntu 22.04 host environment</li> </ul> <p>This may work on other environments but only Ubuntu 22.04 is officially supported.</p>"},{"location":"releases/airy/getting_started/install/#setup-ssh-keys-on-host-and-github","title":"Setup SSH keys on Host and GitHub","text":"<ul> <li>Ensure that you have setup ssh keys on your host computer and GitHub to be able to clone the CogniPilot repositories: Connecting to GitHub with SSH</li> </ul>"},{"location":"releases/airy/getting_started/install/#setup-gpg-keys-on-host-and-github-optional","title":"Setup GPG keys on Host and GitHub (Optional)","text":"<ul> <li>Ensure that you have setup gpg keys on your host computer and GitHub to sign your commits: Connecting to GitHub with SSH</li> </ul>"},{"location":"releases/airy/getting_started/install/#install-git","title":"Install Git","text":"<pre><code>sudo apt install git\n</code></pre>"},{"location":"releases/airy/getting_started/install/#clone-helmet","title":"Clone Helmet","text":"<pre><code>mkdir -p ~/cognipilot\ncd ~/cognipilot\ngit clone git@github.com:cognipilot/helmet\n</code></pre>"},{"location":"releases/airy/getting_started/install/#run-install-script","title":"Run Install Script","text":"<pre><code>~/cognipilot/helmet/install/native_install.sh\n. ~/.profile\n</code></pre>"},{"location":"releases/airy/getting_started/install/#start-jupyterlab-if-you-want","title":"Start JupyterLab (if you want)","text":"<pre><code>cyecca\n</code></pre>"},{"location":"releases/airy/getting_started/install/#run-mrbuggy3-sitl-in-jupyterlab-terminal-or-bash-directly","title":"Run MrBuggy3 SITL (in JupyterLab terminal or Bash directly)","text":"<pre><code>ros2 launch mrbuggy3_gz_bringup gz_nav2.launch.py\n</code></pre> <p>Attention</p> <p>If running on a machine with a limited graphics card use:</p> <pre><code>ros2 launch mrbuggy3_gz_bringup gz_nav2.launch.py world:=basic_map\n</code></pre>"},{"location":"releases/airy/getting_started/install/#simulation","title":"Simulation","text":"<p>Example of simulation running.</p> <p></p> <p>Attention</p> <p>Use a joystick controller (Logitech F310 suggested) to control vehicle modes.</p>"},{"location":"releases/airy/getting_started/install/#select-a-mode","title":"Select a Mode:","text":"<ul> <li>A: manual</li> <li>X: cmd_vel (nav2)</li> <li>B: auto (corti)</li> </ul>"},{"location":"releases/airy/getting_started/install/#manual-mode","title":"Manual Mode:","text":"<ul> <li>Left stick Up/Down: throttle</li> <li>Right stick Left/Right: steering</li> </ul>"},{"location":"releases/airy/getting_started/install/#nav2-cmd_vel-mode","title":"Nav2 (cmd_vel) Mode:","text":"<ul> <li>Click 2D Pose Goal and select desired location on RVIZ2 map.</li> </ul>"},{"location":"releases/airy/getting_started/install/#auto-mode","title":"Auto Mode","text":"<ul> <li>Click 2D Pose Goal and select desired location on RVIZ2 map.</li> </ul>"},{"location":"releases/airy/getting_started/install/#arming","title":"Arming","text":"<ul> <li>START: arm</li> <li>BACK: disarm</li> </ul>"},{"location":"resources/contact/","title":"Contact","text":""},{"location":"resources/contribute/","title":"Contribute","text":""}]}